name: Laravel

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: torneo
          MYSQL_USER: laravel
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'

    - name: Install dependencies
      run: composer install

    - name: Set up .env file from .env.example
      run: |
        cp .env.example .env
        sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=mysql/' .env
        sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
        sed -i 's/DB_PORT=3306/DB_PORT=3306/' .env
        sed -i 's/DB_DATABASE=homestead/DB_DATABASE=torneo/' .env
        sed -i 's/DB_USERNAME=root/DB_USERNAME=laravel/' .env
        sed -i 's/DB_PASSWORD=/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/' .env

    - name: Check MySQL container status
      run: docker ps | grep mysql || echo "MySQL container is not running"

    - name: Show MySQL logs
      run: docker logs $(docker ps -q --filter ancestor=mysql:latest) || echo "No MySQL logs found"

    - name: Wait for MySQL to be ready
      run: |
        export MYSQL_PWD=${{ secrets.DB_PASSWORD }}
        for i in {1..30}; do
          if mysqladmin --host=127.0.0.1 --user=laravel ping --silent; then
            echo "MySQL is up!"
            exit 0
          fi
          echo "Waiting for MySQL... attempt $i"
          sleep 2
        done
        echo "MySQL did not start in time."
        exit 1

    - name: Run Laravel migrations
      run: php artisan migrate --env=testing

    - name: Run tests
      run: php artisan test
